import numpy as np
import shapely.geometry as shg
import copy as cp

max = 30
parent_id = 1
id = 1
inter_pts = 7
prev_ang = 0
r = np.linspace(.99,.26,inter_pts)
#stack initial point
segments = []
segments_term = [np.array([0.,0])]

def rotate(start_pt,rot,r):
  start_pt = np.array(start_pt) + np.array([0, 1])
  R = np.array([[np.cos(rot*np.pi/180),-np.sin(rot*np.pi/180)],[np.sin(rot*np.pi/180),np.cos(rot*np.pi/180)]])
  return np.dot(R,start_pt)

Axiom: R(max,parent_id,id,prev_ang,segments,segments_term)

derivation length: 10
production:
R(max,parent_id,id,prev_ang,segments,segments_term):
  ang = (np.random.random()*(-2*max)+max) + prev_ang
  start_pt = segments_term[parent_id-1]
  term_pt = rotate(start_pt, ang, 1)
  test_line = shg.LineString([start_pt,term_pt])
  rel_segments = segments[:(parent_id-1)] + segments[parent_id:]
  dist_min = 1
  if rel_segments:
    dist_min = np.min( [test_line.distance(obj) for obj in rel_segments ] )
  if dist_min > 0 :
    segments.append( cp.copy(test_line) )
    segments_term.append(term_pt)
    produce @SetColor(0) ^(ang) F(1,.05) R(max,id,id+1,ang,segments,segments_term)
    


interpretation:


endlsystem
